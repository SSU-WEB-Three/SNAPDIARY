<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>마이페이지</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      font-family: 'Noto Sans KR', sans-serif;
    }
    .profile-img {
      width: 100px;
      height: 100px;
      border-radius: 50%;
      background-color: #ccc;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 50px;
      margin-bottom: 10px;
    }
    .calendar-box {
      background-color: #f3e8ff;
      border-radius: 20px;
      padding: 20px;
      max-width: 300px;
    }
    input[type="date"] {
      border: none;
      border-radius: 8px;
      padding: 8px 12px;
      width: 100%;
      font-size: 16px;
      background-color: white;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }
    .diary-card {
      background-color: #fdecee;
      border-radius: 20px;
      padding: 20px;
      width: 220px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      position: relative;
    }
    .diary-date {
      font-size: 14px;
      color: #666;
    }
    .diary-views {
      font-size: 12px;
      color: #999;
      margin-bottom: 8px;
    }
    .card-actions {
      position: absolute;
      top: 10px;
      right: 10px;
    }
    .btn-icon {
      border: none;
      background: none;
      font-size: 14px;
      margin-left: 5px;
      cursor: pointer;
    }
  </style>
</head>
<body class="p-4">

  <div class="container">
    <div class="row">
      <!-- 왼쪽: 프로필 + 달력 -->
      <div class="col-md-4 d-flex flex-column align-items-center mb-4">
        <div class="profile-img">👤</div>
        <div class="h5">이름</div>

        <!-- 달력 -->
        <div class="calendar-box mt-4 w-100 text-center">
          <div class="mb-2 fw-semibold">날짜 선택</div>
          <input type="date" id="datePicker" class="form-control text-center" />
        </div>
      </div>

      <!-- 오른쪽: 작성 버튼 + 카드 목록 -->
      <div class="col-md-8">
        <div class="d-flex justify-content-end mb-3">
          <button class="btn btn-primary" id="writeBtn" style="background-color: #6f42c1; border-color: #6f42c1;">
            작성하기
          </button>
        </div>

        <div class="d-flex flex-wrap gap-4" id="cardContainer"></div>
      </div>
    </div>
  </div>

  <!-- ✍ 작성/수정 모달 -->
  <div class="modal fade" id="entryModal" tabindex="-1" aria-labelledby="entryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <form id="entryForm">
          <div class="modal-header">
            <h5 class="modal-title" id="entryModalLabel">일기 작성</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
          </div>
          <div class="modal-body">
            <textarea class="form-control" id="entryText" rows="5" placeholder="오늘의 일기를 작성해보세요"></textarea>
          </div>
          <div class="modal-footer">
            <input type="hidden" id="editIndex" />
            <button type="submit" class="btn btn-primary">저장</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
  let diaryData = {};

const datePicker = document.getElementById("datePicker");
const cardContainer = document.getElementById("cardContainer");
const writeBtn = document.getElementById("writeBtn");
const entryModal = new bootstrap.Modal(document.getElementById("entryModal"));
const entryForm = document.getElementById("entryForm");
const entryText = document.getElementById("entryText");
const editIndex = document.getElementById("editIndex");

// ✅ localStorage 저장
function saveToLocalStorage() {
  localStorage.setItem("diaryData", JSON.stringify(diaryData));
}

// ✅ localStorage 불러오기
function loadFromLocalStorage() {
  const stored = localStorage.getItem("diaryData");
  if (stored) {
    diaryData = JSON.parse(stored);
  }
}

function renderCardsForDate(dateStr) {
  cardContainer.innerHTML = "";
  const cards = diaryData[dateStr];

  if (!cards || cards.length === 0) {
    cardContainer.innerHTML = `<div class="text-muted">해당 날짜에 작성된 일기가 없습니다.</div>`;
    return;
  }

  cards.forEach((entry, index) => {
    const card = document.createElement("div");
    card.className = "diary-card";
    card.innerHTML = `
      <div class="card-actions">
        <button class="btn-icon text-primary" onclick="editEntry('${dateStr}', ${index})">✏️</button>
        <button class="btn-icon text-danger" onclick="deleteEntry('${dateStr}', ${index})">🗑️</button>
      </div>
      <div class="diary-date">${dateStr}</div>
      <div class="diary-views">조회수 : ${entry.views}</div>
      <hr />
      <div>${entry.title}</div>
    `;
    cardContainer.appendChild(card);
  });
}

// ✏ 수정
window.editEntry = function(dateStr, index) {
  const entry = diaryData[dateStr][index];
  entryText.value = entry.title;
  editIndex.value = index;
  entryModal.show();
};

// 🗑 삭제
window.deleteEntry = function(dateStr, index) {
  if (confirm("이 일기를 삭제할까요?")) {
    diaryData[dateStr].splice(index, 1);
    saveToLocalStorage();
    renderCardsForDate(dateStr);
  }
};

// ➕ 작성
writeBtn.addEventListener("click", () => {
  entryText.value = "";
  editIndex.value = "";
  entryModal.show();
});

// 💾 작성/수정 저장
entryForm.addEventListener("submit", (e) => {
  e.preventDefault();
  const text = entryText.value.trim();
  const dateStr = datePicker.value;
  if (!text) return alert("내용을 입력해주세요");

  if (!diaryData[dateStr]) {
    diaryData[dateStr] = [];
  }

  if (editIndex.value === "") {
    diaryData[dateStr].push({ title: text, views: 0 });
  } else {
    const idx = parseInt(editIndex.value, 10);
    diaryData[dateStr][idx].title = text;
  }

  saveToLocalStorage();
  entryModal.hide();
  renderCardsForDate(dateStr);
});

datePicker.addEventListener("change", () => {
  renderCardsForDate(datePicker.value);
});

// ✅ 페이지 로드시 로컬 데이터 불러오기
window.addEventListener("DOMContentLoaded", () => {
  loadFromLocalStorage();
  const today = new Date().toISOString().split("T")[0];
  datePicker.value = today;
  renderCardsForDate(today);
});
  </script>
</body>
</html>