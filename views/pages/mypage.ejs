<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>마이페이지</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    body {
      background-color: #f5f5f5;
      font-family: 'Pretendard', sans-serif;
    }
    .profile img {
      width: 100px;
      height: 100px;
      object-fit: cover;
      border-radius: 50%;
    }
    .diary-card {
      background: white;
      border-left: 3px solid #0d6efd;
      padding: 16px;
      margin-bottom: 16px;
      box-shadow: 0 0 8px rgba(0, 0, 0, 0.05);
      position: relative;
      cursor: pointer;
    }
    .diary-date {
      font-weight: bold;
    }
    .card-actions {
      position: absolute;
      top: 8px;
      right: 8px;
    }
    .btn-icon {
      background: none;
      border: none;
      font-size: 16px;
      cursor: pointer;
      margin-left: 5px;
    }
    .grass-block {
      width: 12px;
      height: 12px;
      border-radius: 2px;
      cursor: pointer;
      margin: 1px;
      transition: background 0.2s;
    }
    .grass-block:hover {
      opacity: 0.8;
    }
    .grass-chart {
      display: flex;
      flex-wrap: wrap;
      gap: 2px;
      margin-bottom: 20px;
    }
    .border-bottom-divider {
      border-bottom: 1px solid #dee2e6;
      padding-bottom: 10px;
      margin-bottom: 10px;
    }
  </style>
</head>
<body>
  <script>
    const userId = "<%= userId %>";
  </script>

  <div class="container mt-4">
    <div class="row">
      <!-- 왼쪽 사이드바 -->
      <div class="col-md-4">
        <div class="profile text-center mb-3">
          <img src="https://play-lh.googleusercontent.com/38AGKCqmbjZ9OuWx4YjssAz3Y0DTWbiM5HB0ove1pNBq_o9mtWfGszjZNxZdwt_vgHo=w480-h960-rw" alt="프로필 사진" />
          <hr>
          <p class="mt-2">안녕하세요!<br>이곳은 나의 하루 일기장이에요.</p>
        </div>
        <input type="date" id="datePicker" class="form-control mb-2" />
        <button id="writeBtn" class="btn btn-primary w-100 mb-3">작성하기</button>
        <input type="text" id="searchInput" class="form-control mb-2" placeholder="일기 내용 검색..." />
        <ul id="searchResults" class="list-group"></ul>
      </div>

      <!-- 오른쪽 카드 및 잔디 영역 -->
      <div class="col-md-8">
        <div id="grassChart" class="grass-chart"></div>
        <div id="cardContainer"></div>
      </div>
    </div>
  </div>

  <!-- 작성 모달 -->
  <div class="modal fade" id="entryModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">일기 작성</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <form id="entryForm">
          <div class="modal-body">
            <textarea id="entryText" class="form-control" rows="5" required></textarea>
            <input type="hidden" id="editIndex" />
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-primary">저장</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- 조회 모달 -->
  <div class="modal fade" id="viewModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">일기 보기</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <div id="viewDate" class="fw-bold mb-2"></div>
          <div id="viewContent" class="mb-3"></div>
          <div id="viewViews" class="text-muted small"></div>
        </div>
        <div class="modal-footer">
          <button class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    let diaryData = {};

    const datePicker = document.getElementById("datePicker");
    const cardContainer = document.getElementById("cardContainer");
    const writeBtn = document.getElementById("writeBtn");
    const entryModal = new bootstrap.Modal(document.getElementById("entryModal"));
    const viewModal = new bootstrap.Modal(document.getElementById("viewModal"));
    const entryForm = document.getElementById("entryForm");
    const entryText = document.getElementById("entryText");
    const editIndex = document.getElementById("editIndex");
    const grassChart = document.getElementById("grassChart");
    const viewDate = document.getElementById("viewDate");
    const viewContent = document.getElementById("viewContent");
    const viewViews = document.getElementById("viewViews");

    window.addEventListener("DOMContentLoaded", async () => {
      const today = new Date().toISOString().split("T")[0];
      datePicker.value = today;

      const res = await fetch(`/api/diary-all/${userId}`);
      const entries = await res.json();

      diaryData = {};
      entries.forEach(entry => {
        if (!diaryData[entry.date]) diaryData[entry.date] = [];
        diaryData[entry.date].push(entry);
      });

      updateAllViews();
    });

    function renderCards(dateStr, entries = diaryData[dateStr]) {
      cardContainer.innerHTML = "";
      if (!entries || entries.length === 0) {
        cardContainer.innerHTML = `<div class="text-muted">해당 날짜에 작성된 일기가 없어요! 한번 작성해봐요!!</div>`;
        return;
      }
      entries.forEach((entry, index) => {
        const card = document.createElement("div");
        card.className = "diary-card border-bottom-divider";
        card.innerHTML = `
          <div class="card-actions">
            <button class="btn-icon text-primary" onclick="editEntry('${dateStr}', ${index}); event.stopPropagation();">✏️</button>
            <button class="btn-icon text-danger" onclick="deleteEntry('${dateStr}', ${index}); event.stopPropagation();">🗑️</button>
          </div>
          <div class="diary-date">${dateStr}</div>
          <div class="diary-views">조회수 : ${entry.views}</div>
          <hr />
          <div>${entry.title}</div>
        `;
        card.addEventListener("click", () => {
          entry.views += 1;
          viewDate.textContent = `📅 날짜: ${dateStr}`;
          viewContent.textContent = entry.title;
          viewViews.textContent = `👀 조회수: ${entry.views}`;
          viewModal.show();
        });
        cardContainer.appendChild(card);
      });
    }

    function renderGrassChart() {
      grassChart.innerHTML = "";
      const year = new Date(datePicker.value).getFullYear();
      const startDate = new Date(`${year}-01-01`);
      const endDate = new Date(`${year}-12-31`);
      let currentDate = new Date(startDate);

      while (currentDate <= endDate) {
        const dateStr = currentDate.toISOString().split("T")[0];
        const hasData = diaryData[dateStr] && diaryData[dateStr].length > 0;
        const entryCount = hasData ? diaryData[dateStr].length : 0;

        const block = document.createElement("div");
        block.className = "grass-block";
        block.style.backgroundColor = hasData ? "#4caf50" : "#ebedf0";
        block.title = `${dateStr} (${entryCount}개 일기)`;

        block.addEventListener("click", () => {
          datePicker.value = dateStr;
          updateAllViews();
        });

        grassChart.appendChild(block);
        currentDate.setDate(currentDate.getDate() + 1);
      }
    }

    function updateAllViews() {
      renderCards(datePicker.value);
      renderGrassChart();
    }

    window.editEntry = function(dateStr, index) {
      const entry = diaryData[dateStr][index];
      entryText.value = entry.title;
      editIndex.value = index;
      entryModal.show();
    };

    window.deleteEntry = async function(dateStr, index) {
      if (!confirm("이 일기를 삭제할까요?")) return;

      const res = await fetch('/api/diary/delete', {
        method: 'DELETE',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ user_id: userId, date: dateStr, index })
      });

      if (!res.ok) return alert('삭제 실패');
      location.reload();
    };

    writeBtn.addEventListener("click", () => {
      entryText.value = "";
      editIndex.value = "";
      entryModal.show();
    });

    entryForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const text = entryText.value.trim();
      const dateStr = datePicker.value;
      const indexVal = editIndex.value;

      if (!text) return alert("내용을 입력해주세요");

      const res = await fetch('/api/diary/save', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          user_id: userId,
          date: dateStr,
          title: text,
          index: indexVal === "" ? undefined : parseInt(indexVal)
        })
      });

      if (!res.ok) return alert('저장 실패');

      entryModal.hide();
      location.reload();
    });

    datePicker.addEventListener("change", () => {
      updateAllViews();
    });

    document.getElementById("searchInput").addEventListener("input", (e) => {
      const keyword = e.target.value.trim().toLowerCase();
      const resultsEl = document.getElementById("searchResults");
      resultsEl.innerHTML = "";
      if (!keyword) return;

      const matchedDates = Object.keys(diaryData).filter(date =>
        diaryData[date].some(entry => entry.title.toLowerCase().includes(keyword))
      );

      if (matchedDates.length === 0) {
        resultsEl.innerHTML = `<li class="list-group-item text-muted">검색 결과가 없습니다.</li>`;
        return;
      }

      matchedDates.forEach(date => {
        const li = document.createElement("li");
        li.className = "list-group-item list-group-item-action";
        li.textContent = `${date} - ${diaryData[date].length}개 일기`;
        li.style.cursor = "pointer";
        li.addEventListener("click", () => {
          datePicker.value = date;
          updateAllViews();
        });
        resultsEl.appendChild(li);
      });
    });
  </script>
</body>
</html>